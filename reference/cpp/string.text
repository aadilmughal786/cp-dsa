---[ Definition ]---

std::string is a class in C++ that represents a sequence of characters. It is widely used for working with text and character data.
It is part of the Standard Template Library (STL) and provides various methods for manipulating strings.

---[ Header ]---

#include <string>

---[ Creation ]---

std::string myString;        Default-initialized to an empty string
std::string anotherString("Hello, world!");  Initialize using a C-string

---[ Accessing Characters ]---

You can access individual characters in a std::string using the [] operator or the at method:
char firstChar = myString[0];
char secondChar = myString.at(1);

---[ Modifying Strings ]---

You can modify a std::string using various methods:
myString += " Appended";          Append to the string
myString.insert(index, "Text");   Insert text at the specified index
myString.erase(index, length);    Erase characters in the specified range
myString.replace(index, length, "NewText");  Replace characters in the specified range

---[ String Length ]---

You can obtain the length (number of characters) of a std::string using the length or size methods:
size_t length = myString.length();
size_t size = myString.size();

---[ Substring ]---

You can extract a substring from a std::string using the substr method:
std::string substring = myString.substr(startIndex, length);

---[ Searching ]---

You can search for a substring or character in a std::string using the find method:
size_t foundIndex = myString.find("searchText");

---[ Converting to C-String ]---

You can convert a std::string to a C-style null-terminated string (C-string) using the c_str method:
const char* cString = myString.c_str();

