 ---[ Definition ]---

 A std::map is an associative container in C++ that stores a collection of key-value pairs in a sorted order based on the keys.
 It is implemented as a balanced binary search tree (usually a red-black tree) to maintain efficient insertion, deletion, and search operations.
 Keys in a std::map are unique, and each key maps to a single value.

 ---[ Header ]---

#include <map>

---[ Creation ]---

std::map<std::string, int> oMap;

---[ Inserting Key-Value Pairs ]---

oMap.insert(std::make_pair("key", value));
oMap["key"] = value;

---[ Accessing Values ]---

int value = oMap["key"];

---[ Checking if a Key Exists ]---

auto iter = oMap.find("key");
if (iter != oMap.end()) {
    std::cout << "Key found. Value: " << iter->second << std::endl;
} else {
    std::cout << "Key not found." << std::endl;
}

---[ Erasing Key-Value Pairs ]---

oMap.erase("key");

---[ Displaying the Size of the Map ]---

std::cout << "Map size: " << oMap.size() << std::endl;

---[ Clearing the Map ]---

oMap.clear();
std::cout << "Map size after clearing: " << oMap.size() << std::endl;


